{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filterMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAEaA,EAAO,SAACC,GAAD,OAEZ,qBAAKC,UAAU,qCAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,8BAAf,SACN,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,iBAEtB,oBAAIJ,UAAU,WAAd,SAA0BD,EAAMI,QAAQE,aCNrCC,EAAW,SAAAP,GACpB,OACI,qBAAKC,UAAU,4BAAf,SACK,qBAAKA,UAAU,MAAf,SACAD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OAC7B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,YCHhBK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOX,UAAU,SACbY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCyBHG,E,kDA5Bb,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTR,SAAS,GACTS,YAAY,IAJH,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAASc,S,oBAEzC,WAAS,IAAD,SAC4BE,KAAKR,MAA/BR,EADF,EACEA,SAAUS,EADZ,EACYA,YACZQ,EAAiBjB,EAASkB,QAAO,SAAAtB,GAAO,OAC5CA,EAAQE,KAAKqB,cAAcC,SAASX,EAAYU,kBAElD,OACE,sBAAK1B,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,6BACA,cAAC,EAAD,CAAWU,YAAY,kBAAkBC,aAAc,SAAAiB,GAAC,OAAG,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAChG,cAAC,EAAD,CAAUvB,SAAUiB,W,GAvBVO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ff3f21da.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css'\r\nexport const Card = (props) => (\r\n   \r\n        <div className=\"col-lg-3 col-md-6 col-sm-12 col-12\">\r\n            <div className=\"card m-3 p-3\">\r\n                <div className=\"image-container text-center\">\r\n          <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2`}/>\r\n          </div>\r\n          <h1 className=\"userName\">{props.monster.name}</h1>\r\n          </div></div>\r\n)","import React from 'react';\r\nimport './card-list.style.css'\r\nimport {Card} from '../card/card'\r\nexport const CardList = props => {\r\n    return (\r\n        <div className=\"container-fluid pl-5 pr-5\">\r\n             <div className=\"row\">\r\n            {props.monsters.map(monster => (\r\n          <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n        </div>\r\n        </div>\r\n\r\n    )\r\n} ","import React, {Component} from 'react'\r\nimport \"./search-box.style.css\"\r\n\r\n\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input className='search'\r\n        type='search' \r\n        placeholder={placeholder}\r\n        onChange={handleChange} \r\n    />\r\n)","import React, {Component} from 'react'\nimport './App.css';\nimport {CardList} from \"./components/card-list/card-list\"\nimport {SearchBox} from  './components/search-box/search-box'\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      monsters:[],\n      searchField:\"\"\n    };\n  }\n\n  componentDidMount(){  // run on first render \n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters:users}));\n  }\n  render(){\n    const { monsters ,searchField } = this.state;\n    const filterMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return(\n      <div className=\"App\">\n        <h1 className='heading'>Monster Rolodex</h1>\n        <SearchBox placeholder=\"search monsters\" handleChange={e=> this.setState({searchField: e.target.value})}/>\n        <CardList monsters={filterMonsters}/>\n        \n      </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}